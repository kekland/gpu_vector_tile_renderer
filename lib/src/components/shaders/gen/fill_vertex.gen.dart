// GENERATED CODE - DO NOT MODIFY BY HAND
// Generated by tool/generate_shader_code.js

// ignore_for_file: unused_import

import '../_shaders.dart';
import './ubo.gen.dart';

import 'package:flutter_gpu/gpu.dart' as gpu;
import 'package:vector_math/vector_math.dart';

class FillVertexShader extends VertexShaderBindings {
  FillVertexShader() : super(8, shaderLibrary['FillVertex']!) {
    frameInfoUbo = FrameInfoUbo(shader.getUniformSlot('FrameInfo'));
  }

  late final FrameInfoUbo frameInfoUbo;

  @override
  List<UniformBufferObjectBindings> get ubos => [
        frameInfoUbo,
      ];

  void set(
    int index, {
    required Vector2 position,
  }) {
    setVector2(index * bytesPerVertex + 0, vertexData!, position);
  }
}
